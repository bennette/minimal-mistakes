terms[67]<-"technology"
####Remove
terms<-terms[-5]
freq<-freq[-5]
terms<-terms[-57]
freq<-freq[-57]
wordcloud(terms, freq, max.words=25, min.freq=1, rot.per=0.35, use.r.layout=FALSE, colors=RSkittleBrewer('M&M'))
terms
terms<-tdm$dimnames$Terms
freq<-tdm$v
terms
####specific biatch!
terms[4]<-"analyze"
terms[6]<-"apply"
terms[7]<-"application"
terms[11]<-"carry"
terms[12]<-"challenge"
terms[14]<-"complete"
terms[16]<-"comprehend"
terms[19]<-"deadline"
terms[20]<-"define"
terms[24]<-"expertise"
terms[25]<-"external"
terms[29]<-"guidance"
terms[33]<-"innovate"
terms[36]<-"involve"
terms[39]<-"knowledge"
terms[48]<-"organize"
terms[49]<-"organize"
terms[53]<-"principle"
terms[54]<-"priority"
terms[58]<-"resolve"
terms[59]<-"resource"
terms[63]<-"scientific"
terms[64]<-"solve"
terms[62]<-"science"
terms[65]<-"technique"
terms[67]<-"technology"
####Remove
terms<-terms[-5]
freq<-freq[-5]
terms<-terms[-57]
freq<-freq[-57]
freq[48]<-freq[48]+freq[49]
freq<-freq[-49]
terms<-terms[-49]
wordcloud(terms, freq, max.words=25, min.freq=1, rot.per=0.35, use.r.layout=FALSE, colors=RSkittleBrewer('M&M'))
terms
terms<-tdm$dimnames$Terms
freq<-tdm$v
terms
terms<-tdm$dimnames$Terms
freq<-tdm$v
terms
####specific biatch!
terms[4]<-"analyze"
terms[6]<-"apply"
terms[7]<-"application"
terms[11]<-"carry"
terms[12]<-"challenge"
terms[14]<-"complete"
terms[16]<-"comprehend"
terms[19]<-"deadline"
terms[20]<-"define"
terms[24]<-"expertise"
terms[25]<-"external"
terms[29]<-"guidance"
terms[33]<-"innovate"
terms[36]<-"involve"
terms[39]<-"knowledge"
terms[48]<-"organize"
terms[49]<-"organize"
terms[53]<-"principle"
terms[54]<-"priority"
terms[58]<-"resolve"
terms[59]<-"resource"
terms[63]<-"scientific"
terms[65]<-"solve"
terms[62]<-"science"
terms[66]<-"technique"
terms[67]<-"technology"
####Remove
terms<-terms[-5]
freq<-freq[-5]
terms<-terms[-57]
freq<-freq[-57]
freq[48]<-freq[48]+freq[49]
freq<-freq[-49]
terms<-terms[-49]
wordcloud(terms, freq, max.words=25, min.freq=1, rot.per=0.35, use.r.layout=FALSE, colors=RSkittleBrewer('M&M'))
terms<-tdm$dimnames$Terms
freq<-tdm$v
terms
####specific biatch!
terms[4]<-"analyze"
terms[6]<-"apply"
terms[7]<-"application"
terms[11]<-"carry"
terms[12]<-"challenge"
terms[14]<-"complete"
terms[16]<-"comprehend"
terms[19]<-"deadline"
terms[20]<-"define"
terms[24]<-"expertise"
terms[25]<-"external"
terms[29]<-"guidance"
terms[33]<-"innovate"
terms[36]<-"involve"
terms[39]<-"knowledge"
terms[48]<-"organize"
terms[49]<-"organize"
terms[53]<-"principle"
terms[54]<-"priority"
terms[58]<-"resolve"
terms[59]<-"resource"
terms[63]<-"scientific"
terms[65]<-"solve"
terms[62]<-"science"
terms[66]<-"technique"
terms[67]<-"technology"
####Remove
terms<-terms[-5]
freq<-freq[-5]
terms<-terms[-57]
freq<-freq[-57]
freq[48]<-freq[48]+freq[49]
freq<-freq[-49]
terms<-terms[-49]
wordcloud(terms, freq, max.words=25, min.freq=1, rot.per=0.35, use.r.layout=FALSE, colors=RSkittleBrewer('M&M'))
tdm<-TermDocumentMatrix(text)
inspect(tdm)
terms<-tdm$dimnames$Terms
freq<-tdm$v
terms
tdm<-TermDocumentMatrix(text)
inspect(tdm)
terms<-tdm$dimnames$Terms
freq<-tdm$v
terms
####specific biatch!
terms[4]<-"analyze"
terms[6]<-"apply"
terms[7]<-"application"
terms[11]<-"carry"
terms[12]<-"challenge"
terms[14]<-"complete"
terms[16]<-"comprehend"
terms[19]<-"deadline"
terms[20]<-"define"
terms[24]<-"expertise"
terms[25]<-"external"
terms[29]<-"guidance"
terms[33]<-"innovate"
terms[36]<-"involve"
terms[39]<-"knowledge"
terms[48]<-"organize"
terms[49]<-"organize"
terms[53]<-"principle"
terms[54]<-"priority"
terms[58]<-"resolve"
terms[60]<-"resource"
terms[63]<-"scientific"
terms[65]<-"solve"
terms[62]<-"science"
terms[66]<-"technique"
terms[67]<-"technology"
####Remove
terms<-terms[-5]
freq<-freq[-5]
terms<-terms[-57]
freq<-freq[-57]
freq[48]<-freq[48]+freq[49]
freq<-freq[-49]
terms<-terms[-49]
wordcloud(terms, freq, max.words=25, min.freq=1, rot.per=0.35, use.r.layout=FALSE, colors=RSkittleBrewer('M&M'))
tdm<-TermDocumentMatrix(text)
inspect(tdm)
terms<-tdm$dimnames$Terms
freq<-tdm$v
terms
####specific biatch!
terms[4]<-"analyze"
terms[6]<-"apply"
terms[7]<-"application"
terms[11]<-"carry"
terms[12]<-"challenge"
terms[14]<-"complete"
terms[16]<-"comprehend"
terms[19]<-"deadline"
terms[20]<-"define"
terms[24]<-"expertise"
terms[25]<-"external"
terms[29]<-"guidance"
terms[33]<-"innovate"
terms[36]<-"involve"
terms[39]<-"knowledge"
terms[48]<-"organize"
terms[49]<-"organize"
terms[53]<-"principle"
terms[54]<-"priority"
terms[59]<-"resolve"
terms[60]<-"resource"
terms[63]<-"scientific"
terms[65]<-"solve"
terms[62]<-"science"
terms[66]<-"technique"
terms[67]<-"technology"
####Remove
terms<-terms[-5]
freq<-freq[-5]
terms<-terms[-57]
freq<-freq[-57]
freq[48]<-freq[48]+freq[49]
freq<-freq[-49]
terms<-terms[-49]
wordcloud(terms, freq, max.words=25, min.freq=1, rot.per=0.35, use.r.layout=FALSE, colors=RSkittleBrewer('M&M'))
####specific biatch!
terms[4]<-"analyze"
terms[6]<-"apply"
terms[7]<-"application"
terms[11]<-"carry"
terms[12]<-"challenge"
terms[14]<-"complete"
terms[16]<-"comprehend"
terms[19]<-"deadline"
terms[20]<-"define"
terms[24]<-"expertise"
terms[25]<-"external"
terms[29]<-"guidance"
terms[33]<-"innovate"
terms[36]<-"involve"
terms[39]<-"knowledge"
terms[48]<-"organize"
terms[49]<-"organize"
terms[53]<-"principle"
terms[54]<-"priority"
terms[59]<-"resolve"
terms[60]<-"resource"
terms[63]<-"scientific"
terms[65]<-"solve"
terms[62]<-"science"
terms[66]<-"technique"
terms[67]<-"technology"
####Remove
terms<-terms[-5]
freq<-freq[-5]
terms<-terms[-57]
freq<-freq[-57]
freq[48]<-freq[48]+freq[49]
freq<-freq[-49]
terms<-terms[-49]
wordcloud(terms, freq, max.words=25, min.freq=1, rot.per=0.35, use.r.layout=FALSE, colors=RSkittleBrewer('M&M'))
space<-0.025
df<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(df)[1] <- "X"
names(df)[2] <- "Y"
df$Class<-"One"
equation<-c(1,0)
edge<-0.1
df$Class[which(df$Y<=equation[1]*df$X+equation[2])]<-"Two"
dim(df)
sample(c("One", "Two"), 100)
sample(c("One", "Two"), 100, replace=TRUE, prob=0.5)
sample(c("One", "Two"), 100, replace=TRUE, prob=c(0.5, 0.5))
df$Class[which(df$Y<=equation[1]*df$X+equation[2])]<-"Two"
df$Class[which(df$Y<=equation[1]*df$X+equation[2]-edge/2)]<-sample(c("One", "Two"), dim(df$Class[which(df$Y<=equation[1]*df$X+equation[2]-edge/2)])[1], replace=TRUE, prob=c(0.5, 0.5))
dim(df$Class[which(df$Y<=equation[1]*df$X+equation[2]-edge/2)])[1]
hold<-df$Class[which(df$Y<=equation[1]*df$X+equation[2]-edge/2)]
df$Class[which(df$Y<=equation[1]*df$X+equation[2]-edge/2)]<-sample(c("One", "Two"), length(df$Class[which(df$Y<=equation[1]*df$X+equation[2]-edge/2)])[1], replace=TRUE, prob=c(0.5, 0.5))
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
library(ggplot2)
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
df<-df[which(df$Y>=equation[1]*df$X+equation[2]-edge/2)]
df<-df[which(df$Y>=equation[1]*df$X+equation[2]-edge/2),]
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
df$Class[which(df$Y<=equation[1]*df$X+equation[2])]<-"Two"
df<-df[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 && df$Y<=equation[1]*df$X+equation[2]+edge/2),]
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
df$Class[which(df$Y<=equation[1]*df$X+equation[2])]<-"Two"
df<-df[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 & df$Y<=equation[1]*df$X+equation[2]+edge/2),]
df$Class[which(df$Y<=equation[1]*df$X+equation[2])]<-"Two"
df<-df[which(df$Y>=equation[1]*df$X+equation[2]-edge/2),]
df$Class[which(df$Y<=equation[1]*df$X+equation[2])]<-"Two"
df<-df[which(df$Y>=equation[1]*df$X+equation[2]-edge/2),]
space<-0.025
df<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(df)[1] <- "X"
names(df)[2] <- "Y"
df$Class<-"One"
equation<-c(1,0)
edge<-0.1
df$Class[which(df$Y<=equation[1]*df$X+equation[2])]<-"Two"
df<-df[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 & df$Y<=equation[1]*df$X+equation[2]+edge/2),]
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
library(ggplot2)
space<-0.025
df<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(df)[1] <- "X"
names(df)[2] <- "Y"
df$Class<-"One"
equation<-c(1,0)
edge<-0.1
df$Class[which(df$Y<equation[1]*df$X+equation[2])]<-"Two"
df<-df[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 & df$Y<=equation[1]*df$X+equation[2]+edge/2),]
df$Class[which(df$Y<=equation[1]*df$X+equation[2]-edge/2)]<-sample(c("One", "Two"), length(df$Class[which(df$Y<=equation[1]*df$X+equation[2]-edge/2)])[1], replace=TRUE, prob=c(0.5, 0.5))
sample(c("One", "Two"), 100, replace=TRUE, prob=c(0.5, 0.5))
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
library(ggplot2)
space<-0.025
df<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(df)[1] <- "X"
names(df)[2] <- "Y"
df$Class<-"One"
equation<-c(1,0)
edge<-0.1
df$Class[which(df$Y<equation[1]*df$X+equation[2])]<-"Two"
df$Class[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 &
df$Y<=equation[1]*df$X+equation[2]+edge/2)]
<-sample(c("One", "Two"),
length(df$Class[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 &
df$Y<=equation[1]*df$X+equation[2]+edge/2)])[1], replace=TRUE, prob=c(0.5, 0.5))
df$Class[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 &
df$Y<=equation[1]*df$X+equation[2]+edge/2)]
sample(c("One", "Two"),
length(df$Class[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 &
df$Y<=equation[1]*df$X+equation[2]+edge/2)])[1], replace=TRUE, prob=c(0.5, 0.5))
df$Class[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 &
df$Y<=equation[1]*df$X+equation[2]+edge/2)]<-sample(c("One", "Two"),
length(df$Class[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 &
df$Y<=equation[1]*df$X+equation[2]+edge/2)])[1], replace=TRUE, prob=c(0.5, 0.5))
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
?reactive
library(shiny)
?reactive
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
?isolate
library(RWeka)
space<-0.025
df<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(df)[1] <- "X"
names(df)[2] <- "Y"
df$Class<-"One"
equation<-c(1,0)
edge<-0.1
df$Class[which(df$Y<equation[1]*df$X+equation[2])]<-"Two"
df$Class[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 &
df$Y<=equation[1]*df$X+equation[2]+edge/2)]<-sample(c("One", "Two"),
length(df$Class[which(df$Y>=equation[1]*df$X+equation[2]-edge/2 &
df$Y<=equation[1]*df$X+equation[2]+edge/2)])[1], replace=TRUE, prob=c(0.5, 0.5))
NB<-make_Weka_classifier("weka/classifiers/bayes/NaiveBayes")
model<-NB(Class~.,data=df)
View(df)
str(df)
trainII<-read.arff("/Users/Walter/Experiments Spring 2013/RWeka/balance_train.arff")
str(trainII)
df$Class<-as.factor(df$Class)
NB<-make_Weka_classifier("weka/classifiers/bayes/NaiveBayes")
model<-NB(Class~.,data=df)
df$Class<-predict(model,test[,-3])
df$Class<-predict(model,df[,-3])
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
DT<-make_Weka_classifier("weka/classifiers/trees/J48")
model2<-DT(Class~.,data=df)
df$Class<-predict(model2,df[,-3])
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
shiny::runApp('Desktop/Shiny document/classification-app')
?renderPlot
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
dfII<-reactive(df)
str(dfII)
dfII$df
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
?rsample
??rsample
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
shiny::runApp('Desktop/Shiny document/classification-app')
space<-0.025
df<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(df)[1] <- "X"
names(df)[2] <- "Y"
df$Class<-"One"
radius<-1
df$Class[which(radius<=df$X^2+df$Y^2)]<-"Two"
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
space<-0.025
df<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(df)[1] <- "X"
names(df)[2] <- "Y"
df$Class<-"One"
radius<-1
df$Class[which(radius<=(df$X+0.5)^2+(df$Y^2+0.5))]<-"Two"
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
space<-0.025
df<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(df)[1] <- "X"
names(df)[2] <- "Y"
df$Class<-"One"
radius<-0.25
df$Class[which(radius<=(df$X-0.5)^2+(df$Y^2-0.5))]<-"Two"
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
space<-0.025
df<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(df)[1] <- "X"
names(df)[2] <- "Y"
df$Class<-"One"
radius<-0.25
df$Class[which(radius<=(df$X-0.5)^2+(df$Y-0.5)^2)]<-"Two"
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
space<-0.025
df<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(df)[1] <- "X"
names(df)[2] <- "Y"
df$Class<-"One"
radius<-0.125
df$Class[which(radius<=(df$X-0.5)^2+(df$Y-0.5)^2)]<-"Two"
ggplot(df, aes(x=X, y=Y, color=Class))+
geom_point()+
xlab("X")+
ylab("Y")
shiny::runApp('Desktop/Shiny document/circle-app')
shiny::runApp('Desktop/Shiny document/circle-app')
shiny::runApp('Desktop/Shiny document/circle-app')
shiny::runApp('Desktop/Shiny document/nonlinear-appII')
shiny::runApp('Desktop/Shiny document/nonlinear-appII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
space<-0.0125
use<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(use)[1] <- "X"
names(use)[2] <- "Y"
use$Class<-"One"
use$Class[which(use$Y<=(input$radius*use$X-1)^2)]<-"Two"
use$Class<-as.factor(use$Class)
View(use)
space<-0.0125
use<-expand.grid(seq(from=0, to=1, by=space), seq(from=0, to=1, by=space))
names(use)[1] <- "X"
names(use)[2] <- "Y"
use$Class<-"One"
use$Class[which(use$Y<=(2*use$X-1)^2)]<-"Two"
use$Class<-as.factor(use$Class)
View(use)
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
?round
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp('Desktop/Shiny document/nonlinear-appIII')
shiny::runApp()
